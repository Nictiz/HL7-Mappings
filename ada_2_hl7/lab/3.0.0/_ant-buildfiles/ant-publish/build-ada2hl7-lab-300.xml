<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7_300" name="build-ada2hl7-lab-300" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.version" value="3.0.0"/>
    <property name="is.version.short" value="300"/>
    <property name="date.T" value="2021-01-01"/>

    <!-- for now override this with the mp 910 version, until version 9 2.0 has been generated. -->
    <property name="ada.project.source.dir" value="/Users/ahenket/Development/GForge/art_decor/trunk/ada-data/projects/lab"/>


    <!-- place import after properties, otherwise it can't resolve the properties used. -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-lab-include.xml"/>

    <!--<property name="usecase.nt" value="nictiz_test"/>-->

    <target name="setup_lab300" description="Setup subdirectories, schemas, ada instance xmls in ${build.dir} for ${is.name} ${is.version}">

        <!-- nictiz_test copies appropriate ada instances from refs.dir -->
        <!-- not yet implemented there is no ada project for 9 2.0 yet -->
        <!--<antcall target="setup_sub_instances">
            <param name="fileset.dir" value="ada_instance"/>
            <param name="refs.ada.dir" value="ada_instance"/>
            <param name="usecase" value="${usecase.nt}"/>
        </antcall>-->
        <!-- at the moment only schemas for nictiz test -->
        <!--<antcall target="setup_sub_schemas">
            <param name="usecase" value="${usecase.nt}"/>
            <param name="schema.string" value="*${usecase.lab2zorg.st}.xsd"/>
        </antcall>-->

        <!-- beschikbaarstellen_medicatiegegevens copies schemas for project dir and appropriate ada instances from refs.dir for MA-->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.lab2zorg.st}"/>
            <param name="fileset.dir" value="ada_instance_MA"/>
            <param name="fileset.include" value="mg-*MA*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for VV -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.lab2zorg.bs}"/>
            <param name="fileset.dir" value="ada_instance_VV"/>
            <param name="fileset.include" value="mg-*VV*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- xml voorbeelden -->
        <!-- schemas -->
        <mkdir dir="${build.dir}/xml-voorbeelden/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_schemas" includes="*.xsd"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="*${usecase.lab2zorg.st}.xsd"/>
                <include name="*${usecase.lab2zorg.bs}.xsd"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>
        <!-- instances -->
        <echo/>
        <echo>Setup ${build.dir}/xml-voorbeelden containing refreshed ada production instances (${refs.dir}/xml-voorbeelden/ada_instance/*.xml)</echo>

        <mkdir dir="${build.dir}/xml-voorbeelden/ada_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_instance" failonerror="true">
            <fileset dir="${refs.dir}/xml-voorbeelden/ada_instance">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <!-- let's convert to hl7 too while we're at it -->
        <!-- generic stuff for all mp versions -->
        <antcall target="convert_ada_2_hl7_300"/>

    </target>

    <target name="convert_ada_2_hl7_300">

        <!-- convert nictiz test -->
        <!--<antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.nt}"/>
            <param name="xsl.name" value="../${usecase.mv}/payload/${usecase.mv}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>-->

        <!-- convert sturen_laboratoriumresultaten -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.lab2zorg.st}"/>
            <param name="xsl.name" value="../${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>
        <!-- convert beschikbaarstellen_laboratoriumresultaten -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.lab2zorg.bs}"/>
            <param name="xsl.name" value="../${usecase.lab2zorg.bs}/payload/${usecase.lab2zorg.bs}.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- also do the examples -->
        <antcall target="convert_ada_2_hl7_examples_300"/>

    </target>
    
    <target name="convert_ada_2_hl7_examples_300">
        <!-- examples -->
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${build.dir}/xml-voorbeelden/hl7_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
        </delete>
        <mkdir dir="${build.dir}/xml-voorbeelden/cda_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/cda_instance" includes="*.xml"/>
        </delete>
        <!-- sturen_laboratoriumresultaten -->
        <sequential>
            <fileset id="inputfiles" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>
            
            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
        
        <!-- beschikbaarstellen_laboratoriumresultaten -->
        <sequential>
            <fileset id="inputfiles" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>
            
            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.lab2zorg.bs}/payload/${usecase.lab2zorg.bs}.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.lab2zorg.bs}/payload/${usecase.lab2zorg.bs}.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
        
        <!-- everything also to CDA-->
        <!--<sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
            <echo/>
            <echo>${echo.label} ${build.dir}/../${organizer.to.cda.xsl} input dir ${build.dir}/xml-voorbeelden/hl7_instance</echo>
            <xslt force="true" style="${build.dir}/../${organizer.to.cda.xsl}" destdir="${build.dir}/xml-voorbeelden/cda_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>-->        
        
        <!-- bouwstenen transactions, we don't want cda for those -->
        <!--<sequential>
            
            <echo/>
            <echo>${echo.label} ${build.dir}/xml-voorbeelden/bouwstenen_transacties/bouwstenen_transacties_org.xsl input files in ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/xml-voorbeelden/bouwstenen_transacties/bouwstenen_transacties_org.xsl" in="${build.dir}/xml-voorbeelden/bouwstenen_transacties/dummy.xml" out="${build.dir}/xml-voorbeelden/bouwstenen_transacties/dummy-out.xml" useimplicitfileset="false">
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>-->
        
    </target>
    

</project>
