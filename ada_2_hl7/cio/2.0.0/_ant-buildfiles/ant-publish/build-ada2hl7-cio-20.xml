<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7_cio2" name="build-ada2hl7-mp-920" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <!-- Skip ivy with ant -Drun-ivy=false -->
    <property name="run-ivy" value="true"/>
    
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>
    
    
    <property name="is.version" value="2.0.0"/>
    <property name="is.version.short" value="200"/>
    <property name="is.abbreviation" value="cio"/>
    
    <property name="date.T" value="2023-01-01"/>
    <property name="build.dir" value="../.."/>
    

    <property name="instances.dir" value="${build.dir}/../../../../art_decor/production-ada-instances/${is.abbreviation}/${is.version}"/>
    
    <property name="usecase.bci" value="beschikbaarstellen_contraindicatie"/>
    <property name="usecase.bov" value="beschikbaarstellen_overgevoeligheid"/>
    

    <property name="gen.schematron.ref" value="false"/>
    <property name="usecase.nt" value="nictiz_test"/>
    
    <property name="ada.project.source.dir" value="${build.dir}/../../../../art_decor/projects/cio"/>
    
    <target name="setup_cio2" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir} for ${is.name} ${is.version}">

        <!-- beschikbaarstellen_contraindicatie copies schemas for project dir and appropriate ada instances -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.bci}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*bci-tst-*.xml"/>
            <param name="instances.ada.dir" value="data"/>
        </antcall>
        
        <!-- beschikbaarstellen_overgevoeligheid copies schemas for project dir and appropriate ada instances -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.bov}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*bov-tst-*.xml"/>
            <param name="instances.ada.dir" value="data"/>
        </antcall>
    
        <!-- xml voorbeelden -->
        <!-- schemas -->
        <mkdir dir="${build.dir}/xml-voorbeelden/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_schemas" includes="*.xsd"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="*${usecase.bci}.xsd"/>
                <include name="*${usecase.bov}.xsd"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>
        <!-- instances -->
        <echo/>
        <echo>Setup ${build.dir}/xml-voorbeelden containing refreshed ada production instances (${instances.dir}/xml-voorbeelden/ada_instance/*example*.xml)</echo>
        
        <mkdir dir="${build.dir}/xml-voorbeelden/ada_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*example*.xml"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_instance" failonerror="true">
            <fileset dir="${instances.dir}/data">
                <include name="*example*cio2.xml"/>
            </fileset>
        </copy>        
    
    </target>
    
    

    <target name="convert_ada_2_hl7_cio2">

        <!-- convert beschikbaarstellen_contraindicatie -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bci}"/>
            <param name="xsl.name" value="../${usecase.bci}/payload/${usecase.bci}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- beschikbaarstellen_overgevoeligheid-->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bov}"/>
            <param name="xsl.name" value="../${usecase.bov}/payload/${usecase.bov}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>
        
        <!-- examples -->
        <antcall target="convert_ada_2_hl7_examples_cio2"/>
  
    </target>
    
    <target name="convert_ada_2_hl7_examples_cio2">
        <!-- examples -->
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${build.dir}/xml-voorbeelden/hl7_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
        </delete>
        
        <!-- beschikbaarstellen_contraindicatie -->
        <sequential>
            <fileset id="inputfilescio" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*bci-*.xml"/>
            
            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.bci}/payload/${usecase.bci}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.bci}/payload/${usecase.bci}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilescio"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
        
        <!-- beschikbaarstellen_overgevoeligheid -->
        <sequential>
            <fileset id="inputfilescio" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*bov-*.xml"/>
            
            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.bov}/payload/${usecase.bov}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.bov}/payload/${usecase.bov}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilescio"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
        
    </target>
    
    
    <target name="convert_ada_2_hl7_sub">
        
        <property name="xsl.mp" value="${sub.build.dir}/${xsl.name}"/>
        
        <property name="xsl.input" value="${sub.build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${sub.build.dir}/${xsl.out}"/>
        
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output}"/>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>
        </delete>
        
        <fileset id="inputfilescio" dir="${xsl.input}" includes="*.xml"/>
        
        <echo/>
        <echo>${echo.label} ${xsl.mp} input dir ${xsl.input}</echo>
        <xslt force="true" style="${xsl.mp}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputfilescio"/>
            <param name="dateT" expression="${date.T}" if="date.T"/>
            <!-- whether to generate the textual instruction for use based on structured data, 
                    typically true for test/example instances 
                    typically false for production -->
            <param name="generateInstructionText" expression="true"/>
            <param name="schematronRef" expression="${gen.schematron.ref}" if="gen.schematron.ref"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
        </xslt>
    </target>
    
    
    <target name="setup_sub" description="Setup ${build.dir}/${usecase} containing the new/schemas folder from the original ADA project and refreshed ada instances from test_xslt">
        
        <antcall target="setup_sub_schemas">
            <param name="schema.string" value="*${usecase}.xsd"/>
        </antcall>
        
        <antcall target="setup_sub_instances">
            <param name="fileset.dir" value="${fileset.dir}"/>
            <param name="fileset.include" value="${fileset.include}"/>
            <param name="instances.ada.dir" value="${instances.ada.dir}"/>
            <param name="usecase" value="${usecase}"/>
        </antcall>
        
    </target>
    
    <target name="setup_sub_schemas" description="Setup ${build.dir}/${usecase} containing the new/schemas folder from the original ADA project: ${ada.project.source.dir}/schemas">
        <echo/>
        <echo>Setup ${build.dir}/${usecase} containing refreshed ada schemas (${schema.string}) containing the new/schemas folder from the original ADA project: ${ada.project.source.dir}/schemas</echo>
        
        <mkdir dir="${build.dir}/${usecase}/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/${usecase}/ada_schemas" includes="*.xsd"/>
        </delete>
        
        <copy todir="${build.dir}/${usecase}/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="${schema.string}"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>
        
    </target>
    
    <target name="setup_sub_instances" description="Setup ${build.dir}/${usecase} containing refreshed ada production instances (${fileset.dir}/${fileset.include})">
        
        <echo/>
        <echo>Setup ${build.dir}/${usecase} containing refreshed ada production instances (${fileset.include})</echo>
        
        <mkdir dir="${build.dir}/${usecase}/${fileset.dir}"/>
        <delete>
            <fileset dir="${build.dir}/${usecase}/${fileset.dir}" includes="${fileset.include}"/>
        </delete>
        <copy todir="${build.dir}/${usecase}/${fileset.dir}" failonerror="true">
            <fileset dir="${instances.dir}/${instances.ada.dir}">
                <include name="${fileset.include}"/>
            </fileset>
        </copy>
        
    </target>
    
</project>
