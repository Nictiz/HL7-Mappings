<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7" name="build-ada2hl7-mp-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.name" value="Medicatieproces"/>
    <property name="is.abbreviation" value="mp"/>
    <property name="project.version" value="1.0.0"/>
    <property name="build.dir" value="../.."/>
    <property name="ada.project.source.dir" value="C:\SVN\art_decor\trunk\ada-data\projects\${is.abbreviation}-${is.abbreviation}${is.version.short}"/>
    <property name="refs.dir" value="C:\SVN\art_decor\trunk\ada-data\adarefs2ada\${is.abbreviation}\${is.version}"/>

    <!-- place import exactly here, otherwise it can't resolve the properties above, or we can't resolve some properties below, such as ${echo.label.in} -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-include.xml"/>

    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>
    <property name="project.title" value="${echo.label} for ${is.name} ${is.version}"/>

    <property name="usecase.mg" value="beschikbaarstellen_medicatiegegevens"/>
    <property name="usecase.mo" value="beschikbaarstellen_medicatieoverzicht"/>
    <property name="usecase.mv" value="sturen_medicatievoorschrift"/>

    <target name="setup" description="Setup subdirectories in ${build.dir}">
        <!-- sturen_medicatievoorschrift copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="schema.string" value="*${usecase.mv}*"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mv}"/>
        </antcall>
        <!-- sturen_medicatievoorschrift POC Praktijktest -->
        <delete>
            <fileset dir="${build.dir}/${usecase.mv}/ada_instance_POCPraktijktest" includes="*.xml"/>
        </delete>
        <copy todir="${build.dir}/${usecase.mv}/ada_instance_POCPraktijktest" failonerror="true">
            <fileset dir="${refs.dir}/${usecase.mv}/ada_instance_POCPraktijktest">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <!-- beschikbaarstellen_medicatiegegevens MA -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="schema.string" value="*${usecase.mg}*"/>
            <param name="fileset.dir" value="ada_instance_MA"/>
            <param name="fileset.include" value="*MA*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mg}"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens VV -->
        <delete>
            <fileset dir="${build.dir}/${usecase.mg}/ada_instance_VV" includes="*VV*.xml"/>
        </delete>
        <copy todir="${build.dir}/${usecase.mg}/ada_instance_VV" failonerror="true">
            <fileset dir="${refs.dir}/${usecase.mg}/ada_instance">
                <include name="*VV*.xml"/>
            </fileset>
        </copy>
        <!-- beschikbaarstellen_medicatiegegevens POC Praktijktest -->
        <delete>
            <fileset dir="${build.dir}/${usecase.mg}/ada_instance_POCPraktijktest" includes="*.xml"/>
        </delete>
        <copy todir="${build.dir}/${usecase.mg}/ada_instance_POCPraktijktest" failonerror="true">
            <fileset dir="${refs.dir}/${usecase.mg}/ada_instance_POCPraktijktest">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mo}"/>
            <param name="schema.string" value="*${usecase.mo}*"/>
            <param name="fileset.dir" value="ada_instance_mp"/>
            <param name="fileset.include" value="*output*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mo}"/>
        </antcall>

        <!-- let's convert to hl7 too while we're at it -->
        <antcall target="convert_ada_2_hl7"/>

    </target>

    <target name="convert_ada_2_hl7">

        <!-- convert medicatievoorschrift -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="payload/${usecase.mv}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- medicatievoorschrift also to CDA-->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="../../MP90_Transform_Organizer2CDA.xsl"/>
            <param name="xsl.in" value="hl7_instance"/>
            <param name="xsl.out" value="cda_instance"/>
        </antcall>

        <!-- POC Praktijktest -->
        <!-- convert medicatievoorschrift -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="payload/${usecase.mv}_org.xsl"/>
            <param name="xsl.in" value="ada_instance_POCPraktijktest"/>
            <param name="xsl.out" value="hl7_instance_POCPraktijktest"/>
        </antcall>
        <!-- medicatievoorschrift also to CDA-->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="../../MP90_Transform_Organizer2CDA.xsl"/>
            <param name="xsl.in" value="hl7_instance_POCPraktijktest"/>
            <param name="xsl.out" value="cda_instance_POCPraktijktest"/>
        </antcall>

        <!-- convert medicatiegegevens -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="xsl.name" value="payload/${usecase.mg}_org.xsl"/>
            <param name="xsl.in" value="ada_instance_MA"/>
            <param name="xsl.out" value="hl7_instance_MA"/>
        </antcall>
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="xsl.name" value="payload/${usecase.mg}_org.xsl"/>
            <param name="xsl.in" value="ada_instance_VV"/>
            <param name="xsl.out" value="hl7_instance_VV"/>
        </antcall>
        <!-- POC Praktijktest -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="xsl.name" value="payload/${usecase.mg}_org.xsl"/>
            <param name="xsl.in" value="ada_instance_POCPraktijktest"/>
            <param name="xsl.out" value="hl7_instance_POCPraktijktest"/>
        </antcall>

        <!-- medicatieoverzicht -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mo}"/>
            <param name="xsl.name" value="payload/${usecase.mo}_org.xsl"/>
            <param name="xsl.in" value="ada_instance_mp"/>
            <param name="xsl.out" value="hl7_instance_mp"/>
        </antcall>
        <!-- medicatieoverzicht also to CDA-->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mo}"/>
            <param name="xsl.name" value="../../MP90_Transform_Organizer2CDA.xsl"/>
            <param name="xsl.in" value="hl7_instance_mp"/>
            <param name="xsl.out" value="cda_instance_mp"/>
        </antcall>

    </target>

    <target name="convert_ada_2_hl7_sub">

        <property name="xsl_mp" value="${sub.build.dir}/${xsl.name}"/>

        <property name="xsl.input" value="${sub.build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${sub.build.dir}/${xsl.out}"/>

        <echo>Deleting previous results, if any</echo>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>            
        </delete>

        <sequential>
            <fileset id="inputfilesMP" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl_mp} input dir ${xsl.input}</echo>
            <xslt force="true" style="${xsl_mp}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfilesMP"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>


</project>
