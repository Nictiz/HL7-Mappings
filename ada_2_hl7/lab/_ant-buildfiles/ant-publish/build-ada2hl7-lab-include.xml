<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7" name="build-ada2hl7-lab-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.name" value="Laboratoriumuitwisseling"/>
    <property name="is.abbreviation" value="lab"/>
    <property name="project.version" value="3.0.0"/>
    <property name="build.dir" value="../.."/>
    <property name="ada.project.source.dir" value="/Users/ahenket/Development/GForge/art_decor/trunk/ada-data/projects/${is.abbreviation}"/>
    <property name="refs.dir" value="/Users/ahenket/Development/GForge/art_decor/trunk/ada-data/adarefs2ada/${is.abbreviation}/${is.version}"/>
    
    <property name="organizer.to.cda.xsl" value="MP9_Transform_Organizer2CDA.xsl"/>

    <!-- place import exactly here, otherwise it can't resolve the properties above, or we can't resolve some properties below, such as ${echo.label.in} -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-include.xml"/>

    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>
    <property name="project.title" value="${echo.label} for ${is.name} ${is.version}"/>

    <property name="usecase.lab2zorg.st" value="sturen_laboratoriumresultaten"/>
    <property name="usecase.lab2zorg.bs" value="beschikbaarstellen_laboratoriumresultaten"/>

    <target name="setup" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir}">

        <!-- sturen_laboratoriumresultaten copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.lab2zorg.st}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        
        <!-- beschikbaarstellen_laboratoriumresultaten copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.lab2zorg.bs}"/>
             <param name="fileset.dir" value="ada_instance_MA"/>
            <param name="fileset.include" value="*MA*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- xml voorbeelden -->
        <!-- schemas -->
        <mkdir dir="${build.dir}/xml-voorbeelden/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_schemas" includes="*.xsd"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="*${usecase.lab2zorg.st}.xsd"/>
                <include name="*${usecase.lab2zorg.bs}.xsd"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>
        
        <!-- instances -->
        <echo/>
        <echo>Setup ${build.dir}/xml-voorbeelden containing refreshed ada production instances (${refs.dir}/xml-voorbeelden/ada_instance/*.xml)</echo>

        <mkdir dir="${build.dir}/xml-voorbeelden/ada_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_instance" failonerror="true">
            <fileset dir="${refs.dir}/xml-voorbeelden/ada_instance">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="convert_ada_2_hl7">

        <!-- convert sturen_laboratoriumresultaten -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.lab2zorg.st}"/>
            <param name="xsl.name" value="payload/${usecase.lab2zorg.st}.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- convert beschikbaarstellen_laboratoriumresultaten -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.lab2zorg.bs}"/>
            <param name="xsl.name" value="payload/${usecase.lab2zorg.st}.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- also do the examples -->
        <antcall target="convert_ada_2_hl7_examples"/>

    </target>

    <target name="convert_ada_2_hl7_examples">
        <!-- examples -->
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${build.dir}/xml-voorbeelden/hl7_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
        </delete>
        <mkdir dir="${build.dir}/xml-voorbeelden/cda_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/cda_instance" includes="*.xml"/>
        </delete>
        
        <!-- sturen_laboratoriumresultaten -->
        <sequential>
            <fileset id="inputfiles" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- beschikbaarstellen_laboratoriumresultaten -->
        <sequential>
            <fileset id="inputfiles" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.lab2zorg.bs}/payload/${usecase.lab2zorg.st}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.lab2zorg.st}/payload/${usecase.lab2zorg.st}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential> 
    </target>

    <target name="convert_ada_2_hl7_sub">

        <property name="xsl.lab" value="${sub.build.dir}/${xsl.name}"/>

        <property name="xsl.input" value="${sub.build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${sub.build.dir}/${xsl.out}"/>

        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output}"/>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>
        </delete>

        <sequential>
            <fileset id="inputfiles" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl.lab} input dir ${xsl.input}</echo>
            <xslt force="true" style="${xsl.lab}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <param name="schematronRef" expression="false"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>


</project>
