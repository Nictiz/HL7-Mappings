<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7" name="build-ada2hl7-mp-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.name" value="Contraindicaties en overgevoeligheden"/>
    <property name="is.abbreviation" value="cio"/>

    <property name="build.dir" value="../.."/>
    <property name="ada.project.source.dir" value="C:\SVN\art_decor\trunk\ada-data\projects\${is.abbreviation}"/>

    <!-- place import exactly here, otherwise it can't resolve the properties above, or we can't resolve some properties below, such as ${echo.label.in} -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-include.xml"/>

    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>
    <property name="project.title" value="${echo.label} for ${is.name} ${is.version}"/>

    <property name="usecase.bci" value="beschikbaarstellen_contraindicatie"/>

    <target name="setup" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir}">
        <!-- nothing yet -->
    </target>

    <target name="setup_sub_cio" description="Setup ${build.dir}/${usecase} containing the new/schemas folder from the original ADA project and refreshed ada instances from prdinst">

        <antcall target="setup_sub_schemas">
            <param name="schema.string" value="*${usecase}.xsd"/>
        </antcall>

        <antcall target="setup_sub_instances_prdinst">
            <param name="target.dir" value="${build.dir}/${usecase}/ada_instance"/>
            <param name="fileset.dir" value="${prodinst.dir}"/>
            <param name="fileset.include" value="${file.include.string}"/>
        </antcall>

    </target>

    <target name="convert_ada_2_hl7"> </target>


    <target name="convert_ada_2_hl7_sub">

        <property name="xsl.cio" value="${build.dir}/${usecase}/payload/${xsl.name}"/>

        <property name="xsl.input" value="${build.dir}/${usecase}/${xsl.in}"/>
        <property name="xsl.output" value="${build.dir}/${usecase}/${xsl.out}"/>

        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output}"/>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>
        </delete>

        <sequential>
            <fileset id="inputfiles" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl.cio} input dir ${xsl.input}</echo>
            <xslt force="true" style="${xsl.cio}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfiles"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <param name="schematronRef" expression="${schematron.ref}" if="schematron.ref"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>


</project>
