<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts all input to output (target = convert_ada_2_fhir)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="../../ada_2_fhir/mp/9.0.7" default="convert_ada_2_fhir" name="ada_2_fhir_${project.prefix}" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <ant antfile="../../../_ant-buildfiles/ant-include/ant.ivy.xml" inheritall="true" usenativebasedir="true"/>
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>

    <property name="echo.label.in" value="ADA"/>
    <property name="echo.label.out" value="FHIR"/>
    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>

    <property name="project.title" value="${echo.label} for Medicatieproces 9.0.7"/>
    <property name="project.version" value="1.0.0"/>
    <property name="project.prefix" value="mp_9.0.7"/>
    <property name="project.description" value="Contains all relevant materials to convert valid ${echo.label.in} instances for Medicatieproces building blocks to valid ${echo.label.out} instances"/>
    <property name="project.author" value="Nictiz"/>
    <property name="project.website" value="http://www.nictiz.nl/"/>
    <property name="project.status" value="beta"/>
    <property name="project.license" value="GNU-LGPL"/>
    <property name="project.copyright" value="true"/>

    <target name="convert_ada_2_fhir">
        <antcall target="convert_ada_2_fhir_sub">
            <param name="build.dir" value="beschikbaarstellen_medicatiegegevens"/>
        </antcall>
        <antcall target="convert_ada_2_fhir_sub">
            <param name="build.dir" value="beschikbaarstellen_medicatieoverzicht"/>
        </antcall>
        <antcall target="convert_ada_2_fhir_sub">
            <param name="build.dir" value="beschikbaarstellen_verstrekkingenvertaling"/>
        </antcall>
    </target>

    <target name="convert_ada_2_fhir_sub">

        <echo>Copying ADA result files from ${build.dir}</echo>
        <copy todir="${build.dir}/ada_instance" failonerror="true">
            <fileset dir="${build.dir}/ada_instance">
                <include name="**"/>
                <exclude name="*bundle*"/>
            </fileset>
        </copy>

        <property name="xsl_mp" value="${build.dir}/payload/${build.dir}_2_fhir.xsl"/>
        <property name="xsl_mp_resources" value="${build.dir}/payload/${build.dir}_2_fhir_resources.xsl"/>

        <property name="xsl.input" value="${build.dir}/ada_instance"/>
        <property name="xsl.output" value="${build.dir}/fhir_instance"/>

        <echo>Deleting previous results, if any</echo>
        <delete dir="${xsl.output}"/>

        <sequential>
            <fileset id="inputfilesMP" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl_mp_resources}</echo>
            <xslt force="true" style="${xsl_mp_resources}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfilesMP"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>

            <echo/>
            <echo>${echo.label} ${xsl_mp}</echo>
            <xslt force="true" style="${xsl_mp}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfilesMP"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>

    <target name="setup" description="Setup ${build.dir} containing the new/schemas folder from the original ADA project">
        <mkdir dir="${build.dir}"/>

        <!--<delete dir="${build.dir}/ada_new"/>
        <delete dir="${build.dir}/ada_schemas"/>
        
        <copy todir="${build.dir}/ada_new" failonerror="true">
            <fileset dir="${project.source.dir}/new">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${build.dir}/ada_schemas" failonerror="true">
            <fileset dir="${project.source.dir}/schemas">
                <include name="**"/>
            </fileset>
        </copy>-->

        <mkdir dir="${build.dir}/ada_instance"/>
        <mkdir dir="${build.dir}/fhir_instance"/>
        <mkdir dir="${build.dir}/payload"/>
    </target>
</project>
