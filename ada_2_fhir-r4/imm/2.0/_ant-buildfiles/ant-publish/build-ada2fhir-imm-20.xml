<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_fhir" name="build-ada2fhir-lab-300" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.version" value="2.0"/>
    <property name="is.version.short" value="20"/>
    <property name="date.T" value="2024-01-01"/>

    <property name="echo.label.in" value="ADA"/>
    <property name="echo.label.out" value="FHIR"/>
    
    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>

    <property name="ada.project.source.dir" value="${build.dir}/../../../../../../../art_decor/projects/imm-2.0.0-alpha.3"/>
    
    <!-- place import after properties above, otherwise it can't resolve these properties  -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2fhir-imm-include.xml"/>

    <property name="gen.schematron.ref" value="false"/>
    

    <property name="schema.fhir" value="${build.dir}/../../fhir/fhir_schemas/fhir-single.xsd"/>
    <property name="schematron.fhir" value="${build.dir}/../../fhir/fhir_schemas/fhir-invariants.xsl"/>
    
    <property name="xsl.validate.svrl" value="${build.dir}/../../../util/validate-svrl-output.xsl"/>
    <!--<property name="xsl.validate.svrl.input" value="${build.dir}/../../../util/validate-svrl-default-input.xml"/>-->
    
    <target name="setup" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir} for ${is.name} ${is.version}">

        <!-- beschikbaarstellen_immunisatiegegevens-->
        <antcall target="setup_sub_imm">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bs.imm}"/>
            <param name="schema.string" value="*beschikbaarstellen_immunisatiegegevens.xsd"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/data"/>
        </antcall>
        
      </target>

    <target name="convert_ada_2_fhir">
        
        <!-- convert beschikbaarstellen_immunisatiegegevens -->
        <antcall target="convert_ada_2_fhir_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bs.imm}"/>
            <param name="xsl.convert" value="${build.dir}/${usecase.bs.imm}/payload/${usecase.bs.imm}.xsl"/>
            <param name="xsl.in" value="${build.dir}/${usecase.bs.imm}/ada_instance"/>
            <param name="xsl.in.include" value="*.xml"/>
            <param name="xsl.out" value="${build.dir}/${usecase.bs.imm}/fhir_instance"/>
            <!--<param name="param.tdate" value="${date.T}}"/>-->
            <param name="param.writeOutputToDisk" value="true"/>
        </antcall>

    </target>

 
    <target name="schemavalidate_fhir_300">

        <!-- all use cases fhir_instance-->
        <antcall target="schemavalidate_fhir_sub">
            <param name="fileset.include" value="**/fhir_instance/*.xml"/>
            <param name="fileset.exclude" value="nictiz_test/**/*"/>
            <param name="validate.schema" value="${schema.fhir}"/>
        </antcall>
        
    </target>

    <target name="schematronvalidate_fhir_300">

        <!-- first the schematrons per instance -->
        <antcall target="validate_fhir_300"/>
        
        <!-- beschikbaarstellen_laboratoriumresultaten fhir organizer -->
        <antcall target="schematronresults_fhir_300_sub">
            <param name="result.xml" value="${build.dir}/validate/fhir_${usecase.labbr}.xml"/>
            <param name="input.dir" value="${basedir}/../../${usecase.labbr}/validate_fhir_instance"/>
            <param name="input.fileset" value="*.xml"/>
        </antcall>

        <!-- sturen_laboratoriumresultaten fhir organizer -->
        <antcall target="schematronresults_fhir_300_sub">
            <param name="result.xml" value="${build.dir}/validate/fhir_${usecase.labsr}.xml"/>
            <param name="input.dir" value="${basedir}/../../${usecase.labsr}/validate_fhir_instance"/>
            <param name="input.fileset" value="*.xml"/>
        </antcall>
        
        <!-- sturen_laboratoriumresultaten_op_aanvraag fhir organizer -->
        <antcall target="schematronresults_fhir_300_sub">
            <param name="result.xml" value="${build.dir}/validate/fhir_${usecase.labsroa}.xml"/>
            <param name="input.dir" value="${basedir}/../../${usecase.labsroa}/validate_fhir_instance"/>
            <param name="input.fileset" value="*.xml"/>
        </antcall>

    </target>

    <target name="validate_fhir_300">

        <!-- beschikbaarstellen_laboratoriumresultaten -->
        <antcall target="validate_fhir_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.labbr}"/>
            <param name="xsl.input" value="fhir_instance"/>
            <param name="xsl.output" value="validate_fhir_instance"/>
            <param name="xsl.lab" value="${schematron.fhir}"/>
        </antcall>

        <!-- sturen_laboratoriumresultaten -->
        <antcall target="validate_fhir_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.labsr}"/>
            <param name="xsl.input" value="fhir_instance"/>
            <param name="xsl.output" value="validate_fhir_instance"/>
            <param name="xsl.lab" value="${schematron.fhir}"/>
        </antcall>
        
        <!-- sturen_laboratoriumresultaten_op_aanvraag -->
        <antcall target="validate_fhir_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.labsroa}"/>
            <param name="xsl.input" value="fhir_instance"/>
            <param name="xsl.output" value="validate_fhir_instance"/>
            <param name="xsl.lab" value="${schematron.fhir}"/>
        </antcall>

    </target>

    <target name="validate_fhir_sub">
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${sub.build.dir}/${xsl.output}"/>
        <delete>
            <fileset dir="${sub.build.dir}/${xsl.output}" includes="*.xml"/>
        </delete>

        <fileset id="inputfiles" dir="${sub.build.dir}/${xsl.input}" includes="*.xml"/>

        <echo/>
        <echo>${echo.label} ${xsl.lab} input dir ${sub.build.dir}/${xsl.input}</echo>
        <xslt force="true" style="${xsl.lab}" destdir="${sub.build.dir}/${xsl.output}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputfiles"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
        </xslt>
    </target>

    <!-- validates xml using xsd -->
    <target name="schemavalidate_fhir_sub">
        
        <fileset id="inputfiles.validate" dir="${build.dir}">
            <include name="${fileset.include}"/>
            <exclude name="${fileset.exclude}"/>
        </fileset>
        
        <echo/>
        <echo>${echo.label} validate schema with input files ${fileset.include} but excluding ${fileset.exclude} and schema ${validate.schema}</echo>
        <schemavalidate warn="true" failonerror="false">
            <fileset refid="inputfiles.validate"/>
            <schema namespace="http://hl7.org/fhir" url="${schema.fhir}"/>
        </schemavalidate>
        
    </target>
    
    <target name="schematronresults_fhir_300_sub">
        
        <echo/>
        <echo>${echo.label} ${xsl.validate.svrl} make recap of validation in ${result.xml}</echo>
        <xslt force="true" style="${xsl.validate.svrl}" in="${xsl.validate.svrl}" out="${result.xml}">
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
            <param name="inputDir" expression="${input.dir}"/>
            <param name="inputFileSet" expression="${input.fileset}"/>
        </xslt>
        
    </target>
</project>
