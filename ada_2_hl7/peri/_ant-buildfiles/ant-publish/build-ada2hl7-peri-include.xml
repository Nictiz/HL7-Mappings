<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7" name="build-ada2hl7-mp-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.name" value="Geboortezorg"/>
    <property name="is.abbreviation" value="peri"/>
   <property name="build.dir" value="../.."/>
    
    <property name="refs.dir" value="${build.dir}/../../../../art_decor/adarefs2ada/${is.abbreviation}/${is.version}"/>    

    <!-- place import exactly here, otherwise it can't resolve the properties above, or we can't resolve some properties below, such as ${echo.label.in} -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-include.xml"/>

    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>
    <property name="project.title" value="${echo.label} for ${is.name} ${is.version}"/>

    <property name="usecase.ks" value="kernset_geboortezorg"/>
  
    <target name="setup" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir}">

        <!-- kernset_geboortezorg copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.ks}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
   
    </target>

    <target name="convert_ada_2_hl7">

        <!-- convert kernset_geboortezorg -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.ks}"/>
            <param name="xsl.name" value="wrapper/kernset_geboortezorg_wrapper.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>
       
    </target>

    <target name="convert_ada_2_hl7_examples">
        <!-- examples -->
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${build.dir}/xml-voorbeelden/hl7_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
        </delete>
        <mkdir dir="${build.dir}/xml-voorbeelden/cda_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/cda_instance" includes="*.xml"/>
        </delete>
        <!-- medicatievoorschrift -->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="mv*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.mv}/payload/${usecase.mv}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.mv}/payload/${usecase.mv}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- medicatiegegevens -->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="mg-*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.mg}/payload/${usecase.mg}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.mg}/payload/${usecase.mg}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- medicatieoverzicht -->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="mo*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.mo}/payload/${usecase.mo}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.mo}/payload/${usecase.mo}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- medicatiegebruik -->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="mgb*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.mgb}/payload/${usecase.mgb}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.mgb}/payload/${usecase.mgb}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- afhandelen medicatievoorschrift -->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/ada_instance" includes="av*.xml"/>

            <echo/>
            <echo>${echo.label} ${build.dir}/${usecase.av}/payload/${usecase.av}_org.xsl input dir ${build.dir}/xml-voorbeelden/ada_instance</echo>
            <xslt force="true" style="${build.dir}/${usecase.av}/payload/${usecase.av}_org.xsl" destdir="${build.dir}/xml-voorbeelden/hl7_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>

        <!-- everything also to CDA-->
        <sequential>
            <fileset id="inputfilesMP" dir="${build.dir}/xml-voorbeelden/hl7_instance" includes="*.xml"/>
            <echo/>
            <echo>${echo.label} ${build.dir}/../MP90_Transform_Organizer2CDA.xsl input dir ${build.dir}/xml-voorbeelden/hl7_instance</echo>
            <xslt force="true" style="${build.dir}/../MP90_Transform_Organizer2CDA.xsl" destdir="${build.dir}/xml-voorbeelden/cda_instance" extension=".xml" useimplicitfileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="generateInstructionText" expression="true"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>


    </target>

    <target name="convert_ada_2_hl7_sub">

        <property name="xsl.convert" value="${sub.build.dir}/${xsl.name}"/>

        <property name="xsl.input" value="${sub.build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${sub.build.dir}/${xsl.out}"/>

        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output}"/>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>
        </delete>

        <sequential>
            <fileset id="inputfilesMP" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl.convert} input dir ${xsl.input}</echo>
            <xslt force="true" style="${xsl.convert}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfilesMP"/>
                <param name="dateT" expression="${date.T}" if="date.T"/>
                <param name="input_xml_wrapper" expression="input_wrapper.xml"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>


</project>
