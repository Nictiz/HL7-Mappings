<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_ada_2_hl7_20" name="build-ada2hl7-mp-920" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.version" value="9.2.0beta"/>
    <property name="is.version.short" value="920"/>
    <property name="date.T" value="2021-01-01"/>

    <!-- place import after properties above, otherwise it can't resolve these properties  -->
    <import file="../../../_ant-buildfiles/ant-publish/build-ada2hl7-mp-include.xml"/>
    
    <property name="usecase.bci" value="beschikbaarstellen_contraindicatie"/>
    <property name="usecase.bov" value="beschikbaarstellen_overgevoeligheid"/>
    

    <property name="gen.schematron.ref" value="false"/>
    <property name="usecase.nt" value="nictiz_test"/>
    
    <property name="ada.project.source.dir" value="${build.dir}/../../../../../../SVN/art_decor/trunk/ada-data/projects/mp-mp920"/>
    <property name="validate.dir" value="${build.dir}/../../../../../../SVN/AORTA/branches/Onderhoud_Mp_v90/Publicaties/20210921/mp-xml-20210921T194523/schematron_closed_warnings"/>
    <property name="schema.organizer" value="${build.dir}/../../../../../../SVN/AORTA/branches/Onderhoud_Mp_v90/Publicaties/20210921/mp-xml-20210921T194523/schemas_codeGen_flat/organizer.xsd"/>
    <property name="schema.cda" value="${build.dir}/../../../../../../SVN/AORTA/branches/Onderhoud_Mp_v90/Publicaties/20210921/mp-xml-20210921T194523/schemas_codeGen_flat/CDANL_extended.xsd"/>
    
    <property name="xsl.validate.svrl" value="${build.dir}/validate/validate-svrl-output.xsl"/>

    <target name="setup_mp920" description="Setup subdirectories, schemas, ada instance xml's in ${build.dir} for ${is.name} ${is.version}">

        <!-- nictiz_test copies appropriate ada instances from refs.dir -->
        <!-- not yet implemented there is no ada project for 9 2.0 yet -->
        <!--<antcall target="setup_sub_instances">
            <param name="fileset.dir" value="ada_instance"/>
            <param name="refs.ada.dir" value="ada_instance"/>
            <param name="usecase" value="${usecase.nt}"/>
        </antcall>-->
        <!-- at the moment only schemas for nictiz test -->
        <antcall target="setup_sub_schemas">
            <param name="usecase" value="${usecase.nt}"/>
            <param name="schema.string" value="*${usecase.mv}.xsd"/>
        </antcall>

        <!-- beschikbaarstellen_medicatiegegevens copies schemas for project dir and appropriate ada instances from refs.dir for MA-->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_MA"/>
            <param name="fileset.include" value="mg-*MA*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for VV -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_VV"/>
            <param name="fileset.include" value="mg-*VV*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for TA -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_TA"/>
            <param name="fileset.include" value="mg-*TA*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for MVE -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_MVE"/>
            <param name="fileset.include" value="mg-*MVE*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for MGB -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_MGB"/>
            <param name="fileset.include" value="mg-*MGB*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for MTD -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_MTD"/>
            <param name="fileset.include" value="mg-*MTD*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for WDS -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_WDS"/>
            <param name="fileset.include" value="mg-*WDS*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens appropriate ada instances from refs.dir for regression the old MedMij stuff -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- beschikbaarstellen_medicatiegegevens the repo stuff for testing purposes -->
        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="fileset.dir" value="ada_instance_repo"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance_repo"/>
        </antcall>

        <!-- medicatievoorschrift-->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mv}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- sturen_afhandeling_medicatievoorschrift copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.av}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- sturen_medicatiegebruik copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mgb}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- sturen_voorstel_medicatieafspraak copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.vma}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- sturen_voorstel_verstrekkingsverzoek copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.vvv}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>
        <!-- sturen_antwoord_voorstel_verstrekkingsverzoek copies schemas for project dir and appropriate ada instances from refs.dir -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.avvv}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- medicatieoverzicht-->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mo}"/>
            <param name="fileset.dir" value="ada_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.ada.dir" value="ada_instance"/>
        </antcall>

        <!-- xml voorbeelden -->
        <!-- schemas -->
        <mkdir dir="${build.dir}/xml-voorbeelden/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_schemas" includes="*.xsd"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="*${usecase.mv}.xsd"/>
                <include name="*${usecase.mg}.xsd"/>
                <include name="*${usecase.mo}.xsd"/>
                <include name="*${usecase.mgb}.xsd"/>
                <include name="*${usecase.av}.xsd"/>
                <include name="*${usecase.vma}.xsd"/>
                <include name="*${usecase.vvv}.xsd"/>
                <include name="*${usecase.avvv}.xsd"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>
        <!-- instances -->
        <echo/>
        <echo>Setup ${build.dir}/xml-voorbeelden containing refreshed ada production instances (${refs.dir}/xml-voorbeelden/ada_instance/*example*.xml)</echo>

        <mkdir dir="${build.dir}/xml-voorbeelden/ada_instance"/>
        <delete>
            <fileset dir="${build.dir}/xml-voorbeelden/ada_instance" includes="*example*.xml"/>
        </delete>
        <copy todir="${build.dir}/xml-voorbeelden/ada_instance" failonerror="true">
            <fileset dir="${refs.dir}/xml-voorbeelden/ada_instance">
                <include name="*example*.xml"/>
            </fileset>
        </copy>


        <!-- let's convert to hl7 too while we're at it -->
        <!-- generic stuff for all mp versions -->
        <antcall target="convert_ada_2_hl7_20"/>

    </target>
    
    <target name="convert_ada_2_hl7_sub">
        
        <property name="xsl.mp" value="${sub.build.dir}/${xsl.name}"/>
        
        <property name="xsl.input" value="${sub.build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${sub.build.dir}/${xsl.out}"/>
        
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output}"/>
        <delete>
            <fileset dir="${xsl.output}" includes="*.xml"/>
        </delete>
        
        <fileset id="inputfilesMP" dir="${xsl.input}" includes="*.xml"/>
        
        <echo/>
        <echo>${echo.label} ${xsl.mp} input dir ${xsl.input}</echo>
        <xslt force="true" style="${xsl.mp}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputfilesMP"/>
            <param name="dateT" expression="${date.T}" if="date.T"/>
            <!-- whether to generate the textual instruction for use based on structured data, 
                    typically true for test/example instances 
                    typically false for production -->
            <param name="generateInstructionText" expression="true"/>
            <param name="schematronRef" expression="${gen.schematron.ref}" if="gen.schematron.ref"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
        </xslt>
    </target>
    

    <target name="convert_ada_2_hl7_20">

        <!-- convert beschikbaarstellen_contraindicatie -->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bci}"/>
            <param name="xsl.name" value="../${usecase.mg}/payload/${usecase.bci}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>

        <!-- beschikbaarstellen_overgevoeligheid-->
        <antcall target="convert_ada_2_hl7_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.bov}"/>
            <param name="xsl.name" value="../${usecase.mg}/payload/${usecase.bov}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance"/>
        </antcall>
  
    </target>
</project>
